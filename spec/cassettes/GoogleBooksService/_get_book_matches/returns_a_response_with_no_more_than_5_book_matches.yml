---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/books/v1/volumes?maxResults=5&printType=books&q=intitle:thai%2Bcooking
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Wed, 13 Dec 2023 19:58:03 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 13 Dec 2023 19:58:03 GMT
recorded_with: VCR 6.2.0
